# This workflow will install Python dependencies, run tests and lint with all currently supported python versions on all major plattforms
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # python-version: ['3.7', '3.10']
        # os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        os: [windows-latest, macOS-latest, ubuntu-latest] 
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt
    - name: Build wheel
      run: |
        python setup.py bdist_wheel
        ls dist/*
    - name: Save wheel
      uses: actions/upload-artifact@v3
      with:
        name: wntr_${{ matrix.python-version }}_${{ matrix.os }}.whl
        path: dist/wntr*

  test:
    name: Test install and usage of wntr
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # python-version: ['3.7', '3.10']
        # os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        os: [windows-latest, macOS-latest, ubuntu-latest]    
    steps:
    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download wheel
      uses: actions/download-artifact@v3
      with:
        name: wntr_${{ matrix.python-version }}_${{ matrix.os }}.whl
    # - name: Discover
    #   run: |
    #     ls .
    - name: Install wntr
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install --find-links=. wntr
    - name: Usage of wntr
      run: |
        python -c "import wntr"

  create_coverage_reports:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.7', '3.10']
        # os: [ubuntu-latest]
        os: [windows-latest, macOS-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python setup.py develop
    # pip install coveralls
    - name: Run Tests
      run: |
        coverage erase
        coverage run --context=${{ matrix.os }}.py${{ matrix.python-version }} --source=wntr --omit="*/tests/*" -m pytest  --doctest-modules --doctest-glob="*.rst" wntr
        coverage run --context=${{ matrix.os }}.py${{ matrix.python-version }} --source=wntr --omit="*/tests/*" --append -m pytest --doctest-glob="*.rst" documentation
      env:
        COVERAGE_FILE: .coverage.${{ matrix.python-version }}.${{ matrix.os }}
    - name: Save coverage
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: .coverage.${{ matrix.python-version }}.${{ matrix.os }}

  combine_reports:
    needs: [ create_coverage_reports ]
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - uses: actions/checkout@v2
    - name: Install coverage
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python setup.py develop
    # pip install coveralls
    - name: Download coverage artifacts from test matrix
      uses: actions/download-artifact@v2
      with:
        name: coverage
    - name: Setup coverage and combine reports
      run: |
        echo "[paths]" > .coveragerc
        echo "source = " >> .coveragerc
        echo "    wntr/" >> .coveragerc
        echo "    wntr\\" >> .coveragerc
        echo "    D:\\a\\WNTR\\WNTR\\wntr" >> .coveragerc
        echo "    /home/runner/work/WNTR/WNTR/wntr" >> .coveragerc
        echo "    /Users/runner/work/WNTR/WNTR/wntr" >> .coveragerc
        coverage combine
    - name: Create coverage report
      run: |
        coverage report
        coverage json --pretty-print
        coverage html --show-contexts
    - name: Save coverage JSON
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage.json
    - name: Save coverage html
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: htmlcov

  combine_reports_upload_coveralls:
    needs: [ create_coverage_reports ]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - uses: actions/checkout@v2
    - name: Install coverage
      run: |
        python -m pip install --upgrade pip
        pip install coveralls
        pip install -r requirements.txt
        python setup.py develop
    - name: Download coverage artifacts from test matrix
      uses: actions/download-artifact@v2
      with:
        name: coverage
    - name: Setup coverage and combine reports
      run: |
        echo "[paths]" > .coveragerc
        echo "source = " >> .coveragerc
        echo "    wntr/" >> .coveragerc
        echo "    wntr\\" >> .coveragerc
        echo "    D:\\a\\WNTR\\WNTR\\wntr" >> .coveragerc
        echo "    /home/runner/work/WNTR/WNTR/wntr" >> .coveragerc
        echo "    /Users/runner/work/WNTR/WNTR/wntr" >> .coveragerc
        coverage combine
    - name: Push to coveralls
      run: |
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
