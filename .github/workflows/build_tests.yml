# This workflow will install Python dependencies, run tests and lint with all currently supported python versions on all major plattforms
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  schedule:
    - cron: '0 0 1 * *'

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        os: [windows-latest, macOS-13, ubuntu-latest]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt
    - name: Build wheel
      run: |
        python setup.py bdist_wheel
        ls dist/*
    - name: Save wheel
      uses: actions/upload-artifact@v4
      with:
        name: wntr_${{ matrix.python-version }}_${{ matrix.os }}.whl
        path: dist/wntr*

  install_import:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        os: [windows-latest, macOS-13, ubuntu-latest]
      fail-fast: false
    steps:
    - name: Set up Python 
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download wheel
      uses: actions/download-artifact@v4
      with:
        name: wntr_${{ matrix.python-version }}_${{ matrix.os }}.whl
    - name: Install wntr
      run: |
        python -m pip install --upgrade pip
        pip install wheel "numpy>=1.2.1,<2.0" scipy networkx pandas matplotlib setuptools
        pip install --no-index --pre --find-links=. wntr
    - name: Usage of wntr
      run: |
        python -c "import wntr"

  pytest_coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        os: [windows-latest, macOS-13, ubuntu-latest]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m pip install -e .
    - name: Run Tests
      run: | 
        coverage erase
        coverage run --context=${{ matrix.os }}.py${{ matrix.python-version }} --source=wntr --omit="*/tests/*","*/sim/network_isolation/network_isolation.py","*/sim/aml/evaluator.py" -m pytest  --doctest-modules --doctest-glob="*.rst" wntr
        coverage run --context=${{ matrix.os }}.py${{ matrix.python-version }} --source=wntr --omit="*/tests/*","*/sim/network_isolation/network_isolation.py","*/sim/aml/evaluator.py" --append -m pytest --doctest-glob="*.rst" documentation
      env:
        COVERAGE_FILE: .coverage.${{ matrix.python-version }}.${{ matrix.os }}
    - name: Save coverage
      uses: actions/upload-artifact@v4
      with:
        name: .coverage.${{ matrix.python-version }}.${{ matrix.os }}
        path: .coverage.${{ matrix.python-version }}.${{ matrix.os }}
        include-hidden-files: true

  combine_reports:
    needs: [ pytest_coverage ]
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - uses: actions/checkout@v4
    - name: Install coverage
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m pip install -e .
        pip install coveralls
    - name: Download coverage artifacts from test matrix
      uses: actions/download-artifact@v4
      with:
        pattern: .coverage.*.ubuntu-latest # coverage from other OS cause problems
    - name: Setup coverage and combine reports
      run: coverage combine .coverage.*.ubuntu-latest
    - name: Create coverage report
      run: |
        echo "[paths]" > .coveragerc
        echo "source = " >> .coveragerc
        echo "    wntr/" >> .coveragerc
        echo "    wntr\\" >> .coveragerc
        echo "    D:\\a\\WNTR\\WNTR\\wntr" >> .coveragerc
        echo "    /home/runner/work/WNTR/WNTR/wntr" >> .coveragerc
        echo "    /Users/runner/work/WNTR/WNTR/wntr" >> .coveragerc
        echo "    ${{ github.workspace }}/wntr" >> .coveragerc
        coverage report
        coverage json --pretty-print
        coverage html --show-contexts
    - name: Save coverage JSON
      uses: actions/upload-artifact@v4
      with:
        name: coverage-json
        path: coverage.json
    - name: Save coverage html
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html
        path: htmlcov
    - name: Push to coveralls
      run: coveralls --service=github --rcfile=.coveragerc
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
